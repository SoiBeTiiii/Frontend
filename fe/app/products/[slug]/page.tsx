"use client";
import styles from "./productDetail.module.css";
import ProductCard from "../../components/ProductCard";
import React, { useEffect, useState } from "react";
import { useParams } from "next/navigation";
import { fetchProductBySlug } from "../../../lib/productApi";
import ProductCardProps from "../../interface/ProductCardProps";
import { ProductDetail } from "@/app/interface/ProductDetail";

export default function ProductDetailPage() {
  const { slug } = useParams();
  const [product, setProduct] = useState<ProductDetail | null>(null);
  const [quantity, setQuantity] = useState<number>(1);

  useEffect(() => {
    if (slug) {
      fetchProductBySlug(slug as string).then(setProduct);
    }
  }, [slug]);

  const handleBuyNow = (product: ProductDetail, quantity: number) => {
    console.log("Mua ngay:", product.name, "S·ªë l∆∞·ª£ng:", quantity);
  };

  const handleAddToCart = (product: ProductDetail, quantity: number) => {
    console.log("Th√™m v√†o gi·ªè:", product.name, "S·ªë l∆∞·ª£ng:", quantity);
  };

  if (!product) return <p>ƒêang t·∫£i s·∫£n ph·∫©m...</p>;

  return (
    <>
      <main className={styles["product-container"]}>
        <section className={styles["product-gallery"]}>
          <figure>
            <img src={product.image} className={styles["main-image"]} alt={product.name} />
            <figcaption className={styles["thumbnails"]}>
              {product.variants.map((v, idx) => (
                <img key={idx} src={v.image} alt={`thumb-${idx}`} />
              ))}
            </figcaption>
          </figure>
        </section>

        <section className={styles["product-info"]}>
          <header>
            <div className={styles["brand"]}>WHOO</div>
            <h1 className={styles["product-name"]}>{product.name}</h1>
            <div className={styles["rating"]}>‚òÜ‚òÜ‚òÜ‚òÜ‚òÜ <span>(0 ƒë√°nh gi√°)</span></div>
            <div className={styles["sku"]}>
              T√¨nh tr·∫°ng: <span className={styles["in-stock"]}>{product.status}</span> |
              M√£ SKU: <span className={styles["sku-value"]}>{product.variants?.[0]?.sku}</span>
            </div>
          </header>

          <div className={styles["price"]}>
            <strong>{product.variants?.[0]?.sale_price.toLocaleString()}‚Ç´</strong>
            <span className={styles["old-price"]}>{product.variants?.[0]?.price.toLocaleString()}‚Ç´</span>
            <span className={styles["discount"]}>
              -{Math.round(100 - (product.variants?.[0]?.sale_price * 100) / product.variants?.[0]?.price)}%
            </span>
            <div className={styles["save"]}>
              (Ti·∫øt ki·ªám: {(product.variants?.[0]?.price - product.variants?.[0]?.sale_price).toLocaleString()}‚Ç´)
            </div>
          </div>

          <div className={styles["quantity"]}>
            <label htmlFor="quantity-input">S·ªë l∆∞·ª£ng:</label>
            <button aria-label="Gi·∫£m s·ªë l∆∞·ª£ng" onClick={() => setQuantity(prev => Math.max(1, prev - 1))}>-</button>
            <input id="quantity-input" type="text" value={quantity} readOnly />
            <button aria-label="TƒÉng s·ªë l∆∞·ª£ng" onClick={() => setQuantity(prev => prev + 1)}>+</button>
          </div>

          <div className={styles["actions"]}>
            <button className={styles["buy-now"]} onClick={() => handleBuyNow(product, quantity)}>Mua ngay</button>
            <button className={styles["add-cart"]} onClick={() => handleAddToCart(product, quantity)}>Th√™m v√†o gi·ªè</button>
          </div>

          <div className={styles["payment-methods"]} aria-label="Ph∆∞∆°ng th·ª©c thanh to√°n">
            <img src="https://placehold.co/60x30?text=Visa" alt="Thanh to√°n b·∫±ng Visa" />
            <img src="https://placehold.co/60x30?text=Master" alt="MasterCard" />
            <img src="https://placehold.co/60x30?text=ZaloPay" alt="ZaloPay" />
            <img src="https://placehold.co/60x30?text=Momo" alt="Momo" />
            <img src="https://placehold.co/60x30?text=VNPay" alt="VNPay" />
          </div>

          <ul className={styles["features"]}>
            <li>üöö Giao h√†ng to√†n qu·ªëc</li>
            <li>üéÅ T√≠ch ƒëi·ªÉm t·∫•t c·∫£ s·∫£n ph·∫©m</li>
            <li>üí∏ Gi·∫£m gi√° tr√™n m·ªói ƒë∆°n h√†ng</li>
            <li>üîí Cam k·∫øt ch√≠nh h√£ng</li>
          </ul>
        </section>
      </main>

      <section className={styles["product-details"]}>
        <h2 className={styles["tab-title"]}>Th√¥ng tin s·∫£n ph·∫©m</h2>
        <article className={styles["tab-content"]}>
          <h3>{product.name}</h3>
          <p>{product.description || "ƒêang c·∫≠p nh·∫≠t m√¥ t·∫£ s·∫£n ph·∫©m..."}</p>
          <ul>
            <li>1 tu√Ωp ch·ªëng n·∫Øng 50ml + 25ml</li>
            <li>1 n∆∞·ªõc hoa h·ªìng d∆∞·ª°ng tr·∫Øng whoo 20ml</li>
            <li>1 s·ªØa d∆∞·ª°ng tr·∫Øng whoo 20ml</li>
          </ul>
        </article>
      </section>

      <section className={styles["review-section"]}>
        <h2>ƒê√°nh gi√°</h2>
        <div className={styles["stars"]}>‚òÜ‚òÜ‚òÜ‚òÜ‚òÜ <span>(0 ƒë√°nh gi√°)</span></div>

        <article className={styles["review-box"]}>
          <div className={styles["avatar"]} aria-hidden="true"></div>
          <div className={styles["review-info"]}>
            <strong>Nguy·ªÖn VƒÉn A</strong>
            <div className={styles["comment-line"]} aria-hidden="true"></div>
          </div>
        </article>

        <form className={styles["write-review"]}>
          <label htmlFor="review">Nh·∫≠p ƒë√°nh gi√° c·ªßa b·∫°n:</label>
          <input type="text" id="review" placeholder="Nh·∫≠p ƒë√°nh gi√° c·ªßa b·∫°n..." />
          <button type="submit">Vi·∫øt ƒë√°nh gi√°</button>
        </form>
      </section>

      <section className={styles["related-products"]}>
        <h2>S·∫£n ph·∫©m li√™n quan</h2>
        <div className={styles["related-grid"]}>
          {product.related.map((rel, idx) => (
            <ProductCard
              key={idx}
              slug={rel.slug}
              name={rel.name}
              image={rel.image}
              price={rel.sale_price}
              originalPrice={rel.price}
              sold={10}
              discount={Math.round(100 - (rel.sale_price * 100) / rel.price)}
              id={0}
            />
          ))}
        </div>
      </section>
    </>
  );
}
